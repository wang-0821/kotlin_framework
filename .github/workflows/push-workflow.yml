# This is a basic workflow to help you get started with Actions

name: Push CI

# Controls when the action will run. 
on: [push, pull_request]

# Run jobs automatically.
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Service containers to run with the job
    services:
      # mysql service
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: 123456
        ports:
          - "3306:3306"
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3

      # redis service
      redis:
        # Docker Hub image
        image: redis
        ports:
          - 6379
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Set up jdk version
      - uses: actions/setup-java@v1
        with:
          java-version: 1.8

      # use dependencies cache to speed up
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - run: |
          echo "Test create schema start..."
          mysql --host 127.0.0.1 --port 3306 -uroot -p123456 -e 'SHOW DATABASES;'
          echo "Test create schema finished."

      # Runs build
      - run: |
          echo "Build start..."
          ./gradlew build
          echo "Bulid finished."

      # cleanup gradle cache
      # Remove some files from the Gradle cache, so they aren't cached by GitHub Actions.
      # Restoring these files from a GitHub Actions cache might cause problems for future builds.
      - run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties
