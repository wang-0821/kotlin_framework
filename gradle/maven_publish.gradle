apply plugin: 'maven-publish'

// 生成source源码包
task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    classifier 'sources'
}

task javadocJar(type: Jar) {
    from javadoc.destinationDir
    classifier "javadoc"
}

publishing {
    publications {
        maven(MavenPublication) {
            // 指定相关信息
            groupId "com.xiao"
            if (project.hasProperty("projectGroup")) {
                groupId property("projectGroup")
            }

            def publishingSubVersion = property("PUBLISHING_SUB_VERSION")
            if (publishingSubVersion == null || publishingSubVersion.isBlank()) {
                version "$projectMavenVersion" + ".0-SNAPSHOT"
            } else {
                version "$projectMavenVersion" + "." + publishingSubVersion
            }

            println("Publishing version: " + getVersion())

            from components.java
            artifact sourceJar
            artifact javadocJar
        }
    }

    repositories {
        maven {
            name "GithubPackages"
            // 指定要上传的仓库
            url "$gradleRepoUrl"

            // 认证用户，可以设置在gradle.properties中并且ignore it
            credentials {
                def packageUsername = property("PACKAGE_REPO_USERNAME")
                if (packageUsername == null) {
                    println("Can't get package repo username")
                } else {
                    println("Package repo username: " + packageUsername)
                }
                username = packageUsername

                def packageToken = property("PACKAGE_REPO_TOKEN")
                if (packageToken == null) {
                    println("Cant't get package repo token")
                } else {
                    println("Package repo token: " + packageToken)
                }
                password = packageToken
            }
        }
    }
}